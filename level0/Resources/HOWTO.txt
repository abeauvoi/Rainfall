While in gdb, the disassembly of the main function returned this dump :

(gdb) disassemble main
Dump of assembler code for function main:
0x08048ec0 <+0>:	push   %ebp
0x08048ec1 <+1>:	mov    %esp,%ebp
0x08048ec3 <+3>:	and    $0xfffffff0,%esp
0x08048ec6 <+6>:	sub    $0x20,%esp
0x08048ec9 <+9>:	mov    0xc(%ebp),%eax
0x08048ecc <+12>:	add    $0x4,%eax
0x08048ecf <+15>:	mov    (%eax),%eax
0x08048ed1 <+17>:	mov    %eax,(%esp)
0x08048ed4 <+20>:	call   0x8049710 <atoi>
0x08048ed9 <+25>:	cmp    $0x1a7,%eax
0x08048ede <+30>:	jne    0x8048f58 <main+152>

There is a call to atoi, on the first argument of argv.

Then a cmp instruction to check if $eax == 0x1a7 (423 in base 10).

If not, the jne instruction jumps to the address 0x8048f58, which is after
the call to execv at 0x8048f51.

level0@RainFall:~$ ./level0 423

This will spawn a shell :

$ whoami
level1
$ cat /home/user/level1/.pass
<password>
